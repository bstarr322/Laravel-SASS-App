/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.l = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// identity function for calling harmory imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };

/******/ 	// define getter function for harmory exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		Object.defineProperty(exports, name, {
/******/ 			configurable: false,
/******/ 			enumerable: true,
/******/ 			get: getter
/******/ 		});
/******/ 	};

/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};

/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports) {

eval("var $input = $('.media-upload');\nvar $mediaPreviews = $('.media-previews');\nvar $mainContent = $('.main-content');\n\n// @note Fix iOS \"-webkit-overflow-scrolling: touch\" rendering bug by scrolling up and down\n//       1px to force a rerender of the checkbox.\n$mediaPreviews.on('click', '.checkbox', function (event) {\n    if (event.target.tagName.toLowerCase() === 'input') {\n        $mainContent.scrollTop($mainContent.scrollTop() + 1);\n        $mainContent.scrollTop($mainContent.scrollTop() - 1);\n    }\n});\n\n$input.on('change', function (event) {\n    $mediaPreviews.removeClass('bordered').html('');\n    $input.closest('.form-group').removeClass('has-danger').find('.upload-error').remove();\n\n    if (event.currentTarget.files.length > 0) {\n        $mediaPreviews.addClass('bordered').html('<div class=\"loader\"><i class=\"fa fa-refresh fa-spin\"></i></div>');\n        $mediaPreviews.css('min-height', '4em');\n\n        async.eachOfSeries(event.currentTarget.files, function (file, index, done) {\n            var fileReader = new FileReader;\n\n            if (file.type.match('image')) {\n                fileReader.addEventListener('loadend', function (event) {\n                    $mediaPreviews.append(\n                        '<div class=\"col-xs-6 col-lg-3\">' +\n                            '<div class=\"card\">' +\n                                '<div style=\"position:relative\">' +\n                                    '<img src=\"' + fileReader.result + '\" class=\"card-img-top img-fluid\">' +\n                                '</div>' +\n                                '<div class=\"card-block\">' +\n                                    '<div class=\"checkbox float-xs-left\">' +\n                                        '<label class=\"custom-control custom-checkbox mb-0\">' +\n                                            '<input type=\"checkbox\" name=\"media[' + index + '][protected]\" class=\"custom-control-input\">' +\n                                            '<span class=\"custom-control-indicator\"></span>' +\n                                            '<span class=\"custom-control-description\">VIP</span>' +\n                                        '</label>' +\n                                    '</div>' +\n                                '</div>' +\n                            '</div>' +\n                        '</div>'\n                    );\n\n                    done();\n                }, { once: true });\n\n                fileReader.readAsDataURL(file);\n            } else if (file.type.match('video')) {\n                // @note We use a static placeholder image for all video files as generating a preview of large (+200MB)\n                //       has proven to crash the browser. That may be due to base64 limits.\n                $mediaPreviews.append(\n                    '<div class=\"col-xs-6 col-lg-3\">' +\n                        '<div class=\"card\">' +\n                            '<div style=\"position:relative\">' +\n                                '<img src=\"https://beautiesfromheaven.com/images/placeholder-video.png\" class=\"card-img-top img-fluid\">' +\n                                '<i class=\"fa fa-play-circle-o fa-4x play-icon\"></i>' +\n                                '<input type=\"hidden\" name=\"media-video-thumbnail[' + index + ']\" value=\"https://beautiesfromheaven.com/images/placeholder-video.png\">' +\n                            '</div>' +\n                            '<div class=\"card-block\">' +\n                                '<div class=\"checkbox float-xs-left\">' +\n                                    '<label class=\"custom-control custom-checkbox mb-0\">' +\n                                        '<input type=\"checkbox\" name=\"media[' + index + '][protected]\" class=\"custom-control-input\">' +\n                                        '<span class=\"custom-control-indicator\"></span>' +\n                                        '<span class=\"custom-control-description\">VIP</span>' +\n                                    '</label>' +\n                                '</div>' +\n                            '</div>' +\n                        '</div>' +\n                    '</div>'\n                );\n\n                // @note Just to compensate for image load time.\n                setTimeout(function () {\n                    done();\n                }, 250);\n            }\n        }, function (err) {\n            if (err) {\n                $mediaPreviews.removeClass('bordered').html('');\n                $input.replaceWith($input.val('').clone(true));\n                $input = $('.media-upload');\n\n                if (err.status === 404) {\n                    $input.closest('.form-group').addClass('has-danger').append(\n                        '<div class=\"form-control-feedback upload-error\">' +\n                            'An error occurred when loading the content, try uploading video files one by one' +\n                        '</div>'\n                    );\n                }\n            }\n\n            $mediaPreviews.find('.loader').remove();\n            $mediaPreviews.css('min-height', 0);\n        });\n    }\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9yZXNvdXJjZXMvYXNzZXRzL2pzL21lZGlhLXByZXZpZXcuanM/YjRhZCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgJGlucHV0ID0gJCgnLm1lZGlhLXVwbG9hZCcpO1xuY29uc3QgJG1lZGlhUHJldmlld3MgPSAkKCcubWVkaWEtcHJldmlld3MnKTtcbmNvbnN0ICRtYWluQ29udGVudCA9ICQoJy5tYWluLWNvbnRlbnQnKTtcblxuLy8gQG5vdGUgRml4IGlPUyBcIi13ZWJraXQtb3ZlcmZsb3ctc2Nyb2xsaW5nOiB0b3VjaFwiIHJlbmRlcmluZyBidWcgYnkgc2Nyb2xsaW5nIHVwIGFuZCBkb3duXG4vLyAgICAgICAxcHggdG8gZm9yY2UgYSByZXJlbmRlciBvZiB0aGUgY2hlY2tib3guXG4kbWVkaWFQcmV2aWV3cy5vbignY2xpY2snLCAnLmNoZWNrYm94JywgZXZlbnQgPT4ge1xuICAgIGlmIChldmVudC50YXJnZXQudGFnTmFtZS50b0xvd2VyQ2FzZSgpID09PSAnaW5wdXQnKSB7XG4gICAgICAgICRtYWluQ29udGVudC5zY3JvbGxUb3AoJG1haW5Db250ZW50LnNjcm9sbFRvcCgpICsgMSk7XG4gICAgICAgICRtYWluQ29udGVudC5zY3JvbGxUb3AoJG1haW5Db250ZW50LnNjcm9sbFRvcCgpIC0gMSk7XG4gICAgfVxufSk7XG5cbiRpbnB1dC5vbignY2hhbmdlJywgZXZlbnQgPT4ge1xuICAgICRtZWRpYVByZXZpZXdzLnJlbW92ZUNsYXNzKCdib3JkZXJlZCcpLmh0bWwoJycpO1xuICAgICRpbnB1dC5jbG9zZXN0KCcuZm9ybS1ncm91cCcpLnJlbW92ZUNsYXNzKCdoYXMtZGFuZ2VyJykuZmluZCgnLnVwbG9hZC1lcnJvcicpLnJlbW92ZSgpO1xuXG4gICAgaWYgKGV2ZW50LmN1cnJlbnRUYXJnZXQuZmlsZXMubGVuZ3RoID4gMCkge1xuICAgICAgICAkbWVkaWFQcmV2aWV3cy5hZGRDbGFzcygnYm9yZGVyZWQnKS5odG1sKCc8ZGl2IGNsYXNzPVwibG9hZGVyXCI+PGkgY2xhc3M9XCJmYSBmYS1yZWZyZXNoIGZhLXNwaW5cIj48L2k+PC9kaXY+Jyk7XG4gICAgICAgICRtZWRpYVByZXZpZXdzLmNzcygnbWluLWhlaWdodCcsICc0ZW0nKTtcblxuICAgICAgICBhc3luYy5lYWNoT2ZTZXJpZXMoZXZlbnQuY3VycmVudFRhcmdldC5maWxlcywgKGZpbGUsIGluZGV4LCBkb25lKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBmaWxlUmVhZGVyID0gbmV3IEZpbGVSZWFkZXI7XG5cbiAgICAgICAgICAgIGlmIChmaWxlLnR5cGUubWF0Y2goJ2ltYWdlJykpIHtcbiAgICAgICAgICAgICAgICBmaWxlUmVhZGVyLmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWRlbmQnLCBldmVudCA9PiB7XG4gICAgICAgICAgICAgICAgICAgICRtZWRpYVByZXZpZXdzLmFwcGVuZChcbiAgICAgICAgICAgICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwiY29sLXhzLTYgY29sLWxnLTNcIj4nICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPGRpdiBjbGFzcz1cImNhcmRcIj4nICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzxkaXYgc3R5bGU9XCJwb3NpdGlvbjpyZWxhdGl2ZVwiPicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzxpbWcgc3JjPVwiJyArIGZpbGVSZWFkZXIucmVzdWx0ICsgJ1wiIGNsYXNzPVwiY2FyZC1pbWctdG9wIGltZy1mbHVpZFwiPicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPC9kaXY+JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwiY2FyZC1ibG9ja1wiPicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzxkaXYgY2xhc3M9XCJjaGVja2JveCBmbG9hdC14cy1sZWZ0XCI+JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzxsYWJlbCBjbGFzcz1cImN1c3RvbS1jb250cm9sIGN1c3RvbS1jaGVja2JveCBtYi0wXCI+JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cIm1lZGlhWycgKyBpbmRleCArICddW3Byb3RlY3RlZF1cIiBjbGFzcz1cImN1c3RvbS1jb250cm9sLWlucHV0XCI+JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8c3BhbiBjbGFzcz1cImN1c3RvbS1jb250cm9sLWluZGljYXRvclwiPjwvc3Bhbj4nICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzxzcGFuIGNsYXNzPVwiY3VzdG9tLWNvbnRyb2wtZGVzY3JpcHRpb25cIj5WSVA8L3NwYW4+JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzwvbGFiZWw+JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPC9kaXY+JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8L2Rpdj4nICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPC9kaXY+JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAnPC9kaXY+J1xuICAgICAgICAgICAgICAgICAgICApO1xuXG4gICAgICAgICAgICAgICAgICAgIGRvbmUoKTtcbiAgICAgICAgICAgICAgICB9LCB7IG9uY2U6IHRydWUgfSk7XG5cbiAgICAgICAgICAgICAgICBmaWxlUmVhZGVyLnJlYWRBc0RhdGFVUkwoZmlsZSk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGZpbGUudHlwZS5tYXRjaCgndmlkZW8nKSkge1xuICAgICAgICAgICAgICAgIC8vIEBub3RlIFdlIHVzZSBhIHN0YXRpYyBwbGFjZWhvbGRlciBpbWFnZSBmb3IgYWxsIHZpZGVvIGZpbGVzIGFzIGdlbmVyYXRpbmcgYSBwcmV2aWV3IG9mIGxhcmdlICgrMjAwTUIpXG4gICAgICAgICAgICAgICAgLy8gICAgICAgaGFzIHByb3ZlbiB0byBjcmFzaCB0aGUgYnJvd3Nlci4gVGhhdCBtYXkgYmUgZHVlIHRvIGJhc2U2NCBsaW1pdHMuXG4gICAgICAgICAgICAgICAgJG1lZGlhUHJldmlld3MuYXBwZW5kKFxuICAgICAgICAgICAgICAgICAgICAnPGRpdiBjbGFzcz1cImNvbC14cy02IGNvbC1sZy0zXCI+JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAnPGRpdiBjbGFzcz1cImNhcmRcIj4nICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPGRpdiBzdHlsZT1cInBvc2l0aW9uOnJlbGF0aXZlXCI+JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8aW1nIHNyYz1cImh0dHBzOi8vYmVhdXRpZXNmcm9taGVhdmVuLmNvbS9pbWFnZXMvcGxhY2Vob2xkZXItdmlkZW8ucG5nXCIgY2xhc3M9XCJjYXJkLWltZy10b3AgaW1nLWZsdWlkXCI+JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8aSBjbGFzcz1cImZhIGZhLXBsYXktY2lyY2xlLW8gZmEtNHggcGxheS1pY29uXCI+PC9pPicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPGlucHV0IHR5cGU9XCJoaWRkZW5cIiBuYW1lPVwibWVkaWEtdmlkZW8tdGh1bWJuYWlsWycgKyBpbmRleCArICddXCIgdmFsdWU9XCJodHRwczovL2JlYXV0aWVzZnJvbWhlYXZlbi5jb20vaW1hZ2VzL3BsYWNlaG9sZGVyLXZpZGVvLnBuZ1wiPicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8L2Rpdj4nICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPGRpdiBjbGFzcz1cImNhcmQtYmxvY2tcIj4nICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzxkaXYgY2xhc3M9XCJjaGVja2JveCBmbG9hdC14cy1sZWZ0XCI+JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPGxhYmVsIGNsYXNzPVwiY3VzdG9tLWNvbnRyb2wgY3VzdG9tLWNoZWNrYm94IG1iLTBcIj4nICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJtZWRpYVsnICsgaW5kZXggKyAnXVtwcm90ZWN0ZWRdXCIgY2xhc3M9XCJjdXN0b20tY29udHJvbC1pbnB1dFwiPicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8c3BhbiBjbGFzcz1cImN1c3RvbS1jb250cm9sLWluZGljYXRvclwiPjwvc3Bhbj4nICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPHNwYW4gY2xhc3M9XCJjdXN0b20tY29udHJvbC1kZXNjcmlwdGlvblwiPlZJUDwvc3Bhbj4nICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8L2xhYmVsPicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPC9kaXY+JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJzwvZGl2PicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgJzwvZGl2PicgK1xuICAgICAgICAgICAgICAgICAgICAnPC9kaXY+J1xuICAgICAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgICAgICAvLyBAbm90ZSBKdXN0IHRvIGNvbXBlbnNhdGUgZm9yIGltYWdlIGxvYWQgdGltZS5cbiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgZG9uZSgpO1xuICAgICAgICAgICAgICAgIH0sIDI1MCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sIGVyciA9PiB7XG4gICAgICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgICAgICAgJG1lZGlhUHJldmlld3MucmVtb3ZlQ2xhc3MoJ2JvcmRlcmVkJykuaHRtbCgnJyk7XG4gICAgICAgICAgICAgICAgJGlucHV0LnJlcGxhY2VXaXRoKCRpbnB1dC52YWwoJycpLmNsb25lKHRydWUpKTtcbiAgICAgICAgICAgICAgICAkaW5wdXQgPSAkKCcubWVkaWEtdXBsb2FkJyk7XG5cbiAgICAgICAgICAgICAgICBpZiAoZXJyLnN0YXR1cyA9PT0gNDA0KSB7XG4gICAgICAgICAgICAgICAgICAgICRpbnB1dC5jbG9zZXN0KCcuZm9ybS1ncm91cCcpLmFkZENsYXNzKCdoYXMtZGFuZ2VyJykuYXBwZW5kKFxuICAgICAgICAgICAgICAgICAgICAgICAgJzxkaXYgY2xhc3M9XCJmb3JtLWNvbnRyb2wtZmVlZGJhY2sgdXBsb2FkLWVycm9yXCI+JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ0FuIGVycm9yIG9jY3VycmVkIHdoZW4gbG9hZGluZyB0aGUgY29udGVudCwgdHJ5IHVwbG9hZGluZyB2aWRlbyBmaWxlcyBvbmUgYnkgb25lJyArXG4gICAgICAgICAgICAgICAgICAgICAgICAnPC9kaXY+J1xuICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgJG1lZGlhUHJldmlld3MuZmluZCgnLmxvYWRlcicpLnJlbW92ZSgpO1xuICAgICAgICAgICAgJG1lZGlhUHJldmlld3MuY3NzKCdtaW4taGVpZ2h0JywgMCk7XG4gICAgICAgIH0pO1xuICAgIH1cbn0pO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHJlc291cmNlcy9hc3NldHMvanMvbWVkaWEtcHJldmlldy5qcyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }
/******/ ]);